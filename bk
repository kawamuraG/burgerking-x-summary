黒い四角をすべてコピー → 入れる ↓<details><summary>開く</summary><pre>name: BK Summary\non:\n schedule:\n - cron: '30 22 * * *'\n - cron: '0 4 * * *'\n - cron: '0 8 * * *'\n - cron: '0 10 * * *'\n workflow_dispatch:\n\njobs:\n run:\n runs-on: ubuntu-latest\n steps:\n - uses: actions/checkout@v4\n - uses: actions/setup-python@v5\n with:\n python-version: '3.11'\n - name: Install dependencies\n run:
黒い四角をコピー → 入れる ↓<details><summary>開く</summary><pre>#!/usr/bin/env python3\nimport datetime as dt, html, json, os, smtplib, subprocess\nfrom email.mime.text import MIMEText\nfrom email.utils import formatdate\nJST = dt.timezone(dt.timedelta(hours=9))\nsince = (dt.datetime.utcnow() - dt.timedelta(hours=24)).strftime('%Y-%m-%dT%H:%M:%SZ')\nquery = '("バーガーキング" OR "Burger King") lang:ja -is:retweet'\ncmd = f'snscrape --jsonl --max-results 400 --since "{since}" twitter-search "{query}"'\nrows = [json.loads(l) for l in subprocess.check_output(cmd, shell=True, text=True).splitlines()]\nNEG = ["最悪","遅い","高い","まずい","炎上","詐欺","嫌い","二度と"]\nfor r in rows:\n r['neg'] = -sum(w in r['content'] for w in NEG)\n r['img'] = 1 if r.get('media') else 0\nrows.sort(key=lambda r:(r['neg'], -r['img'], -r['likeCount']))\nrows = rows[:50]\ntrs=[]\nfor i,r in enumerate(rows,1):\n t=dt.datetime.fromisoformat(r['date']).astimezone(JST).strftime('%m/%d %H:%M')\n url=f'https://x.com/i/web/status/{r[\"id\"]}'\n trs.append(f"<tr><td>{i}</td><td>{t}</td><td>{html.escape(r['content'][:120])}</td><td>{r['likeCount']}</td><td>{r['retweetCount']}</td><td><a href='{url}'>Link</a></td></tr>")\nhtmltbl="""<style>table,td,th{border:1px solid #ccc;border-collapse:collapse;padding:4px;font-size:12px}th{background:#f2f2f2}</style><table><tr><th>#</th><th>日時</th><th>本文</th><th>いいね</th><th>リポスト</th><th>URL</th></tr>{}</table>""".format(''.join(trs))\nmsg=MIMEText(htmltbl,'html','utf-8')\nmsg['Subject']=f'バーガーキング Xまとめ {dt.datetime.now(JST):%m/%d %H:%M}'\nmsg['From']=os.environ['GMAIL_USER']; msg['To']='ruigo.kawamura@burgerking.co.jp'; msg['Date']=formatdate(localtime=True)\nwith smtplib.SMTP_SSL('smtp.gmail.com',465) as s:\n s.login(os.environ['GMAIL_USER'], os.environ['GMAIL_PASS'])\n s.send_message(msg)\nprint('Email sent!')</pre></details>
